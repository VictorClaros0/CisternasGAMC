@page
@model CisternasGAMC.Pages.Citizen.CisternCalendarModel
@{
    Layout = "_Layout";
}
@section Styles {
    <link rel="stylesheet" href="~/css/Calendar.css" />
}

<!-- Main container -->
<div class="container mt-5">
    <section class="text-center">
        <h1 class="display-4 mb-3 text-primary">
            <strong>Entregas de Agua</strong>
            <span class="secondary-text">para @Model.NombreOTB</span>
        </h1>
        <p class="lead">Consulta el estado de las entregas de agua programadas para tu comunidad.</p>

        <!-- Delivery Cards -->
        <div id="deliveryContainer" class="row mt-5">
            @foreach (var day in Enum.GetValues(typeof(DayOfWeek)).Cast<DayOfWeek>())
            {
                var deliveriesForDay = Model.CalendarEvents
                .Where(e => e.DayOfWeek == day.ToString())
                .ToList();

                @if (deliveriesForDay.Any()) // Mostrar solo si hay entregas para ese día
                {
                    <div class="col-lg-4 col-md-6 mb-4">
                        @foreach (var timeSlot in new[] { "En la Mañana", "En la Tarde", "En la Noche" })
                        {
                            var eventsInSlot = deliveriesForDay
                            .Where(e => e.TimeSlot == timeSlot)
                            .ToList();

                            @if (eventsInSlot.Any())
                            {
                                @foreach (var evnt in eventsInSlot)
                                {
                                    <div class="card otb-card shadow-lg border-0 mb-3 @(evnt.Title == "1" ? "normal-bg" : evnt.Title == "2" ? "green-bg" : "red-bg")">
                                        <!-- Card Body with Flexbox to center the content -->
                                        <div class="card-body d-flex flex-column align-items-center justify-content-center">
                                            <h5 class="card-title">@Model.GetSpanishDayName(day)</h5>
                                            <img src="~/images/status/@($"{evnt.Title}.png")" alt="Estado de Entrega" class="status-icon mb-3" />
                                        </div>
                                    </div>

                                }
                            }
                        }
                    </div>
                }
            }
        </div>
    </section>
</div>

<script>
    // Animación al hacer scroll: Cargar las tarjetas cuando entren y salgan de la vista
    document.addEventListener("DOMContentLoaded", function () {
        const otbCards = document.querySelectorAll(".otb-card");

        const observer = new IntersectionObserver(entries => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.classList.add('show');
                    entry.target.classList.remove('hide-down');
                } else {
                    entry.target.classList.remove('show');
                    entry.target.classList.add('hide-down');
                }
            });
        }, {
            threshold: 0.1
        });

        otbCards.forEach(card => observer.observe(card));
    });
</script>
