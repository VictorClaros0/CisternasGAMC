@page
@model CisternasGAMC.Pages.Admin.Cruds.UserCrud.DetailsModel
@{
    ViewData["Title"] = "Detalles del Usuario";

    Layout = "_LayoutAdmin";
}

<section class="content-header">
    <h1>Detalles del Usuario - @Model.User.FirstName @Model.User.LastName</h1>
</section>

<section class="content">
    <div class="box box-info">
        <div class="box-body">
            <div class="card mb-4">
                <div class="card-header bg-info text-white">
                    <h4>Información del Usuario</h4>
                </div>
                <div class="card-body">
                    <dl class="row">
                        <dt class="col-sm-3">Correo Electrónico</dt>
                        <dd class="col-sm-9">@Model.User.Email</dd>

                        <dt class="col-sm-3">Número de Teléfono</dt>
                        <dd class="col-sm-9">@Model.User.PhoneNumber</dd>

                        <dt class="col-sm-3">Rol</dt>
                        <dd class="col-sm-9">@(Model.User.Role == "admin" ? "Administrador" : "Conductor")</dd>

                        <dt class="col-sm-3">Estado</dt>
                        <dd class="col-sm-9">
                            @(Model.User.Status switch
                            {
                                1 => "Activo",
                                2 => "Inactivo",
                                3 => "Despedido",
                                _ => "Desconocido"

                            })
                        </dd>
                    </dl>
                </div>
            </div>

            <div class="card mb-4">
                <div class="card-header bg-secondary text-white">
                    <h4>Reportes de Entregas</h4>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <h5>Cisternas más Usadas</h5>
                            <canvas id="cisternChart"></canvas>
                        </div>
                        <div class="col-md-6">
                            <h5>OTBs más Frecuentes</h5>
                            <canvas id="otbChart"></canvas>
                        </div>
                    </div>

                    <div class="row mt-4">
                        <div class="col-md-12">
                            <h5>Agua Entregada</h5>
                            <canvas id="waterChart"></canvas>
                        </div>
                    </div>
                </div>
            </div>

            <div class="d-flex justify-content-between mt-3">
                <a asp-page="./Edit" asp-route-id="@Model.User.UserId" class="btn btn-warning">Editar</a>
                <a asp-page="./Index" class="btn btn-secondary">Volver a la Lista</a>
            </div>
        </div>
    </div>
</section>

<!-- Scripts para Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    // Gráfico de Cisternas más Usadas
    const cisternData = {
        labels: @Html.Raw(Json.Serialize(Model.FavoriteCisterns)),
        datasets: [{
            label: 'Uso de Cisternas',
            data: @Html.Raw(Json.Serialize(Model.FavoriteCisterns.Select(c => c.Count()))),
            backgroundColor: 'rgba(54, 162, 235, 0.7)',
            borderColor: 'rgba(54, 162, 235, 1)',
            borderWidth: 1
        }]
    };
    new Chart(document.getElementById('cisternChart'), {
        type: 'bar',
        data: cisternData,
        options: {
            responsive: true,
            plugins: {
                legend: { position: 'top' },
                title: { display: true, text: 'Cisternas más Usadas' }
            }
        }
    });

    // Gráfico de OTBs más Frecuentes
    const otbData = {
        labels: @Html.Raw(Json.Serialize(Model.FrequentOTBs)),
        datasets: [{
            label: 'Visitas a OTBs',
            data: @Html.Raw(Json.Serialize(Model.FrequentOTBs.Select(o => o.Count()))),
            backgroundColor: ['rgba(255, 99, 132, 0.7)', 'rgba(54, 162, 235, 0.7)', 'rgba(255, 206, 86, 0.7)'],
        }]
    };
    new Chart(document.getElementById('otbChart'), {
        type: 'pie',
        data: otbData,
        options: {
            responsive: true,
            plugins: {
                legend: { position: 'bottom' },
                title: { display: true, text: 'OTBs más Frecuentes' }
            }
        }
    });

    // Gráfico de Agua Entregada
    const waterData = {
        labels: ['Total Entregado', 'Promedio por Entrega'],
        datasets: [{
            data: [@Model.TotalWaterDelivered, @Model.AverageWaterDelivered],
            backgroundColor: ['rgba(75, 192, 192, 0.7)', 'rgba(255, 206, 86, 0.7)'],
        }]
    };
    new Chart(document.getElementById('waterChart'), {
        type: 'doughnut',
        data: waterData,
        options: {
            responsive: true,
            plugins: {
                legend: { position: 'bottom' },
                title: { display: true, text: 'Agua Entregada' }
            }
        }
    });
</script>
